name: Local Deploy

on:
  workflow_call:
    secrets:
      DOPPLER_TOKEN: 
        required: true
      GCP_SERVICE_ACCOUNT_KEY:
        required: true
      GCP_PROJECT_ID:
        required: true
      APP_TYPE:
        required: true
    

# on:
#   workflow_dispatch:

jobs:
  validations:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: pip install -r requirements.txt || echo "No dependencies required"

    - name: Run validation script
      run: python validate_targets.py

    - id: string
      uses: vishalmamidi/lowercase-action@v1
      with:
        string: ${{ github.actor }}

    - uses: dopplerhq/secrets-fetch-action@v1.2.0
      id: doppler
      with:
        doppler-token: ${{ secrets.DOPPLER_TOKEN }}
        doppler-project: infra
        doppler-config: "dev_${{ steps.string.outputs.lowercase }}"    

    - name: Validate envs
      run: |
        if [ -z "${{ steps.doppler.outputs.CUSTOM_LOCAL }}" ]; then
          echo "Error: CUSTOM_LOCAL is empty or not set."
          exit 1
        fi
  
        if [ -z "${{ steps.doppler.outputs.APP_TYPE }}" ]; then
          echo "Error: APP_TYPE is empty or not set."
          exit 1
        fi
  
        if [ -z "${{ steps.doppler.outputs.DOMAIN }}" ]; then
          echo "Error: DOMAIN is empty or not set."
          exit 1
        fi
  
        if [ -z "${{ steps.doppler.outputs.ENV }}" ]; then
          echo "Error: ENV is empty or not set."
          exit 1
        fi
  
        echo "All required variables are set."

  build_web:
    runs-on: macos-latest
    needs: validations
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - id: string
      uses: vishalmamidi/lowercase-action@v1
      with:
        string: ${{ github.actor }}

    - uses: dopplerhq/secrets-fetch-action@v1.2.0
      id: doppler
      with:
        doppler-token: ${{ secrets.DOPPLER_TOKEN }}
        doppler-project: infra
        doppler-config: "dev_${{ steps.string.outputs.lowercase }}"

    - name: Define Flavor file
      run: |
        cat <<EOF > flavor.json
        {
          "ENV": "${{ steps.doppler.outputs.ENV }}",
          "CUSTOM_LOCAL": "${{ steps.doppler.outputs.CUSTOM_LOCAL }}",
          "DOMAIN": "${{ steps.doppler.outputs.DOMAIN }}", 
          "APP_TYPE": "${{ steps.doppler.outputs.APP_TYPE }}"
        }
        EOF

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.24.0
  
    - name: Install dependencies
      run: |
        flutter pub get
        dart pub get
  
    - name: Run build_runner
      run: |
        dart run build_runner build --delete-conflicting-outputs
          
    - name: Build web
      run: |
        echo "DEPLOYMENT_ID=web-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
        flutter build web \
            --dart-define-from-file=flavor.json \
            --web-renderer canvaskit \
            --source-maps \
            --dart-define=DEPLOYMENT_ID=$DEPLOYMENT_ID \
            --dart-define=GIT_COMMIT_HASH=${{ github.sha }}

    - name: Build document
      run: |
        echo "FLAVOR: local" > build/web/flavor.txt
        echo "DEPLOYMENT_ID: $DEPLOYMENT_ID" >> build/web/flavor.txt
        echo "GIT_COMMIT_HASH: ${{ github.sha }}" >> build/web/flavor.txt
        echo "DEPLOYED_BY: ${{ github.actor }}" >> build/web/flavor.txt
        echo "TIMESTAMP (UTC): $(date -u)" >> build/web/flavor.txt
        echo "TIMESTAMP (Local): $(date)" >> build/web/flavor.txt
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build/web 

  deploy_web:
    permissions:
      id-token: write
      contents: read
    runs-on: macos-latest
    needs: build_web
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build/web

    - id: string
      uses: vishalmamidi/lowercase-action@v1
      with:
        string: ${{ github.actor }}

    - uses: dopplerhq/secrets-fetch-action@v1.2.0
      id: doppler
      with:
        doppler-token: ${{ secrets.DOPPLER_TOKEN }}
        doppler-project: infra
        doppler-config: "dev_${{ steps.string.outputs.lowercase }}"  
  
    - name: Define Flavor file
      run: |
        cat <<EOF > flavor.json
        {
          "ENV": "${{ steps.doppler.outputs.ENV }}",
          "CUSTOM_LOCAL": "${{ steps.doppler.outputs.CUSTOM_LOCAL }}",
          "DOMAIN": "${{ steps.doppler.outputs.DOMAIN }}", 
          "APP_TYPE": "${{ steps.doppler.outputs.APP_TYPE }}"
        }
        EOF
    
    - name: Deploy web
      env:
        GCLOUD_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        npm install -g firebase-tools
        echo $GCLOUD_KEY > /tmp/gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        firebase deploy --only hosting:dev-${{ steps.doppler.outputs.CUSTOM_LOCAL }}-${{ secrets.APP_TYPE }}