name: "Deploy iOS"

on:
  workflow_call:
    secrets:
      CUSTOM_LOCAL:
        required: true
      APP_TYPE:
        required: true
      DOMAIN:
        required: true
      ENV:
        required: true

jobs:
  validations:
    uses: ./.github/workflows/validations.yaml
    secrets:
      CUSTOM_LOCAL: ${{ secrets.CUSTOM_LOCAL }}
      APP_TYPE: ${{ secrets.APP_TYPE }}
      DOMAIN: ${{ secrets.DOMAIN }}
      ENV: ${{ secrets.ENV }}

  build_ios:
    runs-on: macos-latest
    needs: validations
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.24.0

    - name: Install dependencies
      run: |
        flutter pub get
        dart pub get

    - name: Run build_runner
      run: |
        dart run build_runner build --delete-conflicting-outputs

    - name: Define Flavor file
      run: |
        cat <<EOF > flavor.json
        {
          "ENV": "${{ secrets.ENV }}",
          "CUSTOM_LOCAL": "${{ secrets.CUSTOM_LOCAL }}",
          "DOMAIN": "${{ secrets.DOMAIN }}", 
          "APP_TYPE": "${{ secrets.APP_TYPE }}"
        }
        EOF
          
    - name: Build ios
      run: |
        echo "DEPLOYMENT_ID=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
        flutter build ipa \
            --dart-define-from-file=flavor.json \
            --dart-define=DEPLOYMENT_ID=$DEPLOYMENT_ID \
            --dart-define=GIT_COMMIT_HASH=${{ github.sha }}
    
    - name: Build document
      run: |
        echo "FLAVOR: ${{ secrets.ENV }}" > build/ios/flavor.txt
        echo "DEPLOYMENT_ID: $DEPLOYMENT_ID" >> build/ios/flavor.txt
        echo "GIT_COMMIT_HASH: ${{ github.sha }}" >> build/ios/flavor.txt
        echo "DEPLOYED_BY: ${{ github.actor }}" >> build/ios/flavor.txt
        echo "TIMESTAMP (UTC): $(date -u)" >> build/ios/flavor.txt
        echo "TIMESTAMP (Local): $(date)" >> build/ios/flavor.txt

    # - name: Install Fastlane
    #   run: |
    #     sudo gem install fastlane -NV
    #     cd ios
    #     bundle install

    # - name: Deploy to TestFlight
    #   env:
    #     MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
    #     APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
    #   run: |
    #     cd ios
    #     echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > AuthKey.json
    #     bundle exec fastlane testflight
