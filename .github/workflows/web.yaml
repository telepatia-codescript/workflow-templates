name: "Deploy Web"
on:
  workflow_call:
    secrets:
        GCP_SERVICE_ACCOUNT_KEY:
            required: true
        GCP_PROJECT_ID:
            required: true
        CUSTOM_LOCAL:
            required: true
        APP_TYPE:
            required: true
        DOMAIN:
            required: true
        ENV:
            required: true
jobs:
  validations:
    uses: ./.github/workflows/validations.yaml
    secrets:
      CUSTOM_LOCAL: ${{ secrets.CUSTOM_LOCAL }}
      APP_TYPE: ${{ secrets.APP_TYPE }}
      DOMAIN: ${{ secrets.DOMAIN }}
      ENV: ${{ secrets.ENV }}

  build_web:
    runs-on: macos-latest
    needs: validations
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.24.0

    - name: Install dependencies
      run: |
        flutter pub get
        dart pub get

    - name: Run build_runner
      run: |
        dart run build_runner build --delete-conflicting-outputs

    - name: Define Flavor file
      run: |
        cat <<EOF > flavor.json
        {
          "ENV": "${{ secrets.ENV }}",
          "CUSTOM_LOCAL": "${{ secrets.CUSTOM_LOCAL }}",
          "DOMAIN": "${{ secrets.DOMAIN }}", 
          "APP_TYPE": "${{ secrets.APP_TYPE }}"
        }
        EOF
          
    - name: Build web
      run: |
        echo "DEPLOYMENT_ID=web-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
        flutter build web \
            --dart-define-from-file=flavor.json \
            --web-renderer canvaskit \
            --source-maps \
            --dart-define=DEPLOYMENT_ID=$DEPLOYMENT_ID \
            --dart-define=GIT_COMMIT_HASH=${{ github.sha }}

    - name: Build document
      run: |
        echo "FLAVOR: ${{ secrets.ENV }}" > build/web/flavor.txt
        echo "DEPLOYMENT_ID: $DEPLOYMENT_ID" >> build/web/flavor.txt
        echo "GIT_COMMIT_HASH: ${{ github.sha }}" >> build/web/flavor.txt
        echo "DEPLOYED_BY: ${{ github.actor }}" >> build/web/flavor.txt
        echo "TIMESTAMP (UTC): $(date -u)" >> build/web/flavor.txt
        echo "TIMESTAMP (Local): $(date)" >> build/web/flavor.txt
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build/web 

  deploy_web:
    runs-on: macos-latest
    needs: build_web
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build/web   
  
    - name: Define Flavor file
      run: |
        cat <<EOF > flavor.json
        {
          "ENV": "${{ secrets.ENV }}",
          "CUSTOM_LOCAL": "${{ secrets.CUSTOM_LOCAL }}",
          "DOMAIN": "${{ secrets.DOMAIN }}", 
          "APP_TYPE": "${{ secrets.APP_TYPE }}"
        }
        EOF
    
    - name: Deploy web
      env:
        GCLOUD_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        npm install -g firebase-tools
        echo $GCLOUD_KEY > /tmp/gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        firebase deploy --only hosting:${{ secrets.ENV }}